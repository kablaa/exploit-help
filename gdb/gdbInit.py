from subprocess import *
import subprocess
import ConfigParser

CONFIG_FILE = "init.ini"


class GDBSession(object):
    """docstring for GDBSession"""
    def __init__(self, path):
        super(GDBSession, self).__init__()
        self.session = subprocess.Popen(['gdb','-q', path] ,stdin= PIPE)

    def interact(self):
        """docstring for interact"""

        cmd = raw_input() + "\n"
        while cmd != "q\n":
            self.session.stdin.write(cmd)
            cmd = raw_input() + "\n"

#todo: add function to create notes
#use the split function to check the first word of the commans against a list of commands

    def addBreakPoint(self,bp,bpType):
        """docstring for addbp"""
        if type(bp) is list:
            if bpType == 'func':
                for i in range(0,len(bp)):
                    self.session.stdin.write("b " + bp[i] + '\n')
            elif bpType == 'addr':
                for i in range(0,len(bp)):
                    self.session.stdin.write("b *" + bp[i] + '\n')
        elif type(bp) is str:
            if bpType == 'func':
                self.session.stdin.write("b " + bp + '\n')
            elif bpType == 'addr':
                self.session.stdin.write("b *" + bp + '\n')

#todo: look into extended interpolation so we won't need commas
def getList(configFile,secion,var):
    return list(configFile.get(secion,var).replace('\n','').split(','))

configFile = ConfigParser.ConfigParser()
configFile.read(CONFIG_FILE)
gdbSession = GDBSession(configFile.get('File','path'))
gdbSession.addBreakPoint(getList(configFile,'BreakPoints','Functions'),'func')
gdbSession.addBreakPoint(getList(configFile,'BreakPoints','Addrs'),'addr')
gdbSession.interact()
