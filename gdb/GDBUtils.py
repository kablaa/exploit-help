from subprocess import *
import subprocess


class GDBSession(object):
    """docstring for GDBSession"""
    def __init__(self, path):
        super(GDBSession, self).__init__()
        self.path = path
        self.session = subprocess.Popen(['gdb','-q', self.path] ,stdin= PIPE)

    def interact(self):
        """docstring for interact"""

        cmd = raw_input() + "\n"
        while cmd != "q\n":
            self.session.stdin.write(cmd)
            cmd = raw_input() + "\n"

    def addBreakPoints(self,breakpoints,bpType):
        """docstring for addBreakPoints"""
        if type(breakpoints) is list:
            if bpType == 'func':
                for i in range(0,len(breakpoints)):
                    self.session.stdin.write("b " + breakpoints[i] + '\n')
            elif bpType == 'addr':
                for i in range(0,len(breakpoints)):
                    self.session.stdin.write("b *" + breakpoints[i] + '\n')

