from subprocess import *
import subprocess


class GDBSession(object):
    """docstring for GDBSession"""
    def __init__(self, path):
        super(GDBSession, self).__init__()
        self.path = path
        self.session = subprocess.Popen(['gdb','-q', self.path] ,stdin= PIPE)

    def interact(self):
        """docstring for interact"""

        cmd = raw_input() + "\n"
        while cmd != "q\n":
            self.session.stdin.write(cmd)
            cmd = raw_input() + "\n"

    def addBreakPoint(self,bp,bpType):
        """docstring for addbp"""
        if type(bp) is list:
            if bpType == 'func':
                for i in range(0,len(bp)):
                    self.session.stdin.write("b " + bp[i] + '\n')
            elif bpType == 'addr':
                for i in range(0,len(bp)):
                    self.session.stdin.write("b *" + bp[i] + '\n')
        elif type(bp) is str:
            if bpType == 'func':
                self.session.stdin.write("b " + bp + '\n')
            elif bpType == 'addr':
                self.session.stdin.write("b *" + bp + '\n')
