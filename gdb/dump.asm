
test:     file format elf32-i386


Disassembly of section .init:

080482f4 <_init>:
 80482f4:	53                   	push   ebx
 80482f5:	83 ec 08             	sub    esp,0x8
 80482f8:	e8 b3 00 00 00       	call   80483b0 <__x86.get_pc_thunk.bx>
 80482fd:	81 c3 2f 15 00 00    	add    ebx,0x152f
 8048303:	8b 83 fc ff ff ff    	mov    eax,DWORD PTR [ebx-0x4]
 8048309:	85 c0                	test   eax,eax
 804830b:	74 05                	je     8048312 <_init+0x1e>
 804830d:	e8 3e 00 00 00       	call   8048350 <__gmon_start__@plt>
 8048312:	83 c4 08             	add    esp,0x8
 8048315:	5b                   	pop    ebx
 8048316:	c3                   	ret    

Disassembly of section .plt:

08048320 <printf@plt-0x10>:
 8048320:	ff 35 30 98 04 08    	push   DWORD PTR ds:0x8049830
 8048326:	ff 25 34 98 04 08    	jmp    DWORD PTR ds:0x8049834
 804832c:	00 00                	add    BYTE PTR [eax],al
	...

08048330 <printf@plt>:
 8048330:	ff 25 38 98 04 08    	jmp    DWORD PTR ds:0x8049838
 8048336:	68 00 00 00 00       	push   0x0
 804833b:	e9 e0 ff ff ff       	jmp    8048320 <_init+0x2c>

08048340 <puts@plt>:
 8048340:	ff 25 3c 98 04 08    	jmp    DWORD PTR ds:0x804983c
 8048346:	68 08 00 00 00       	push   0x8
 804834b:	e9 d0 ff ff ff       	jmp    8048320 <_init+0x2c>

08048350 <__gmon_start__@plt>:
 8048350:	ff 25 40 98 04 08    	jmp    DWORD PTR ds:0x8049840
 8048356:	68 10 00 00 00       	push   0x10
 804835b:	e9 c0 ff ff ff       	jmp    8048320 <_init+0x2c>

08048360 <__libc_start_main@plt>:
 8048360:	ff 25 44 98 04 08    	jmp    DWORD PTR ds:0x8049844
 8048366:	68 18 00 00 00       	push   0x18
 804836b:	e9 b0 ff ff ff       	jmp    8048320 <_init+0x2c>

08048370 <__isoc99_scanf@plt>:
 8048370:	ff 25 48 98 04 08    	jmp    DWORD PTR ds:0x8049848
 8048376:	68 20 00 00 00       	push   0x20
 804837b:	e9 a0 ff ff ff       	jmp    8048320 <_init+0x2c>

Disassembly of section .text:

08048380 <_start>:
 8048380:	31 ed                	xor    ebp,ebp
 8048382:	5e                   	pop    esi
 8048383:	89 e1                	mov    ecx,esp
 8048385:	83 e4 f0             	and    esp,0xfffffff0
 8048388:	50                   	push   eax
 8048389:	54                   	push   esp
 804838a:	52                   	push   edx
 804838b:	68 80 85 04 08       	push   0x8048580
 8048390:	68 20 85 04 08       	push   0x8048520
 8048395:	51                   	push   ecx
 8048396:	56                   	push   esi
 8048397:	68 f1 84 04 08       	push   0x80484f1
 804839c:	e8 bf ff ff ff       	call   8048360 <__libc_start_main@plt>
 80483a1:	f4                   	hlt    
 80483a2:	66 90                	xchg   ax,ax
 80483a4:	66 90                	xchg   ax,ax
 80483a6:	66 90                	xchg   ax,ax
 80483a8:	66 90                	xchg   ax,ax
 80483aa:	66 90                	xchg   ax,ax
 80483ac:	66 90                	xchg   ax,ax
 80483ae:	66 90                	xchg   ax,ax

080483b0 <__x86.get_pc_thunk.bx>:
 80483b0:	8b 1c 24             	mov    ebx,DWORD PTR [esp]
 80483b3:	c3                   	ret    
 80483b4:	66 90                	xchg   ax,ax
 80483b6:	66 90                	xchg   ax,ax
 80483b8:	66 90                	xchg   ax,ax
 80483ba:	66 90                	xchg   ax,ax
 80483bc:	66 90                	xchg   ax,ax
 80483be:	66 90                	xchg   ax,ax

080483c0 <deregister_tm_clones>:
 80483c0:	b8 57 98 04 08       	mov    eax,0x8049857
 80483c5:	2d 54 98 04 08       	sub    eax,0x8049854
 80483ca:	83 f8 06             	cmp    eax,0x6
 80483cd:	76 1a                	jbe    80483e9 <deregister_tm_clones+0x29>
 80483cf:	b8 00 00 00 00       	mov    eax,0x0
 80483d4:	85 c0                	test   eax,eax
 80483d6:	74 11                	je     80483e9 <deregister_tm_clones+0x29>
 80483d8:	55                   	push   ebp
 80483d9:	89 e5                	mov    ebp,esp
 80483db:	83 ec 14             	sub    esp,0x14
 80483de:	68 54 98 04 08       	push   0x8049854
 80483e3:	ff d0                	call   eax
 80483e5:	83 c4 10             	add    esp,0x10
 80483e8:	c9                   	leave  
 80483e9:	f3 c3                	repz ret 
 80483eb:	90                   	nop
 80483ec:	8d 74 26 00          	lea    esi,[esi+eiz*1+0x0]

080483f0 <register_tm_clones>:
 80483f0:	b8 54 98 04 08       	mov    eax,0x8049854
 80483f5:	2d 54 98 04 08       	sub    eax,0x8049854
 80483fa:	c1 f8 02             	sar    eax,0x2
 80483fd:	89 c2                	mov    edx,eax
 80483ff:	c1 ea 1f             	shr    edx,0x1f
 8048402:	01 d0                	add    eax,edx
 8048404:	d1 f8                	sar    eax,1
 8048406:	74 1b                	je     8048423 <register_tm_clones+0x33>
 8048408:	ba 00 00 00 00       	mov    edx,0x0
 804840d:	85 d2                	test   edx,edx
 804840f:	74 12                	je     8048423 <register_tm_clones+0x33>
 8048411:	55                   	push   ebp
 8048412:	89 e5                	mov    ebp,esp
 8048414:	83 ec 10             	sub    esp,0x10
 8048417:	50                   	push   eax
 8048418:	68 54 98 04 08       	push   0x8049854
 804841d:	ff d2                	call   edx
 804841f:	83 c4 10             	add    esp,0x10
 8048422:	c9                   	leave  
 8048423:	f3 c3                	repz ret 
 8048425:	8d 74 26 00          	lea    esi,[esi+eiz*1+0x0]
 8048429:	8d bc 27 00 00 00 00 	lea    edi,[edi+eiz*1+0x0]

08048430 <__do_global_dtors_aux>:
 8048430:	80 3d 54 98 04 08 00 	cmp    BYTE PTR ds:0x8049854,0x0
 8048437:	75 13                	jne    804844c <__do_global_dtors_aux+0x1c>
 8048439:	55                   	push   ebp
 804843a:	89 e5                	mov    ebp,esp
 804843c:	83 ec 08             	sub    esp,0x8
 804843f:	e8 7c ff ff ff       	call   80483c0 <deregister_tm_clones>
 8048444:	c6 05 54 98 04 08 01 	mov    BYTE PTR ds:0x8049854,0x1
 804844b:	c9                   	leave  
 804844c:	f3 c3                	repz ret 
 804844e:	66 90                	xchg   ax,ax

08048450 <frame_dummy>:
 8048450:	b8 3c 97 04 08       	mov    eax,0x804973c
 8048455:	8b 10                	mov    edx,DWORD PTR [eax]
 8048457:	85 d2                	test   edx,edx
 8048459:	75 05                	jne    8048460 <frame_dummy+0x10>
 804845b:	eb 93                	jmp    80483f0 <register_tm_clones>
 804845d:	8d 76 00             	lea    esi,[esi+0x0]
 8048460:	ba 00 00 00 00       	mov    edx,0x0
 8048465:	85 d2                	test   edx,edx
 8048467:	74 f2                	je     804845b <frame_dummy+0xb>
 8048469:	55                   	push   ebp
 804846a:	89 e5                	mov    ebp,esp
 804846c:	83 ec 14             	sub    esp,0x14
 804846f:	50                   	push   eax
 8048470:	ff d2                	call   edx
 8048472:	83 c4 10             	add    esp,0x10
 8048475:	c9                   	leave  
 8048476:	e9 75 ff ff ff       	jmp    80483f0 <register_tm_clones>

0804847b <func2>:
 804847b:	55                   	push   ebp
 804847c:	89 e5                	mov    ebp,esp
 804847e:	83 ec 08             	sub    esp,0x8
 8048481:	83 ec 0c             	sub    esp,0xc
 8048484:	68 a0 85 04 08       	push   0x80485a0
 8048489:	e8 a2 fe ff ff       	call   8048330 <printf@plt>
 804848e:	83 c4 10             	add    esp,0x10
 8048491:	90                   	nop
 8048492:	c9                   	leave  
 8048493:	c3                   	ret    

08048494 <func3>:
 8048494:	55                   	push   ebp
 8048495:	89 e5                	mov    ebp,esp
 8048497:	83 ec 08             	sub    esp,0x8
 804849a:	83 ec 08             	sub    esp,0x8
 804849d:	ff 75 08             	push   DWORD PTR [ebp+0x8]
 80484a0:	68 a7 85 04 08       	push   0x80485a7
 80484a5:	e8 86 fe ff ff       	call   8048330 <printf@plt>
 80484aa:	83 c4 10             	add    esp,0x10
 80484ad:	90                   	nop
 80484ae:	c9                   	leave  
 80484af:	c3                   	ret    

080484b0 <func1>:
 80484b0:	55                   	push   ebp
 80484b1:	89 e5                	mov    ebp,esp
 80484b3:	83 ec 28             	sub    esp,0x28
 80484b6:	83 ec 0c             	sub    esp,0xc
 80484b9:	68 ac 85 04 08       	push   0x80485ac
 80484be:	e8 7d fe ff ff       	call   8048340 <puts@plt>
 80484c3:	83 c4 10             	add    esp,0x10
 80484c6:	83 ec 08             	sub    esp,0x8
 80484c9:	8d 45 e4             	lea    eax,[ebp-0x1c]
 80484cc:	50                   	push   eax
 80484cd:	68 bc 85 04 08       	push   0x80485bc
 80484d2:	e8 99 fe ff ff       	call   8048370 <__isoc99_scanf@plt>
 80484d7:	83 c4 10             	add    esp,0x10
 80484da:	e8 9c ff ff ff       	call   804847b <func2>
 80484df:	83 ec 0c             	sub    esp,0xc
 80484e2:	8d 45 e4             	lea    eax,[ebp-0x1c]
 80484e5:	50                   	push   eax
 80484e6:	e8 a9 ff ff ff       	call   8048494 <func3>
 80484eb:	83 c4 10             	add    esp,0x10
 80484ee:	90                   	nop
 80484ef:	c9                   	leave  
 80484f0:	c3                   	ret    

080484f1 <main>:
 80484f1:	8d 4c 24 04          	lea    ecx,[esp+0x4]
 80484f5:	83 e4 f0             	and    esp,0xfffffff0
 80484f8:	ff 71 fc             	push   DWORD PTR [ecx-0x4]
 80484fb:	55                   	push   ebp
 80484fc:	89 e5                	mov    ebp,esp
 80484fe:	51                   	push   ecx
 80484ff:	83 ec 04             	sub    esp,0x4
 8048502:	e8 a9 ff ff ff       	call   80484b0 <func1>
 8048507:	b8 00 00 00 00       	mov    eax,0x0
 804850c:	83 c4 04             	add    esp,0x4
 804850f:	59                   	pop    ecx
 8048510:	5d                   	pop    ebp
 8048511:	8d 61 fc             	lea    esp,[ecx-0x4]
 8048514:	c3                   	ret    
 8048515:	66 90                	xchg   ax,ax
 8048517:	66 90                	xchg   ax,ax
 8048519:	66 90                	xchg   ax,ax
 804851b:	66 90                	xchg   ax,ax
 804851d:	66 90                	xchg   ax,ax
 804851f:	90                   	nop

08048520 <__libc_csu_init>:
 8048520:	55                   	push   ebp
 8048521:	57                   	push   edi
 8048522:	56                   	push   esi
 8048523:	53                   	push   ebx
 8048524:	e8 87 fe ff ff       	call   80483b0 <__x86.get_pc_thunk.bx>
 8048529:	81 c3 03 13 00 00    	add    ebx,0x1303
 804852f:	83 ec 0c             	sub    esp,0xc
 8048532:	8b 6c 24 20          	mov    ebp,DWORD PTR [esp+0x20]
 8048536:	8d b3 0c ff ff ff    	lea    esi,[ebx-0xf4]
 804853c:	e8 b3 fd ff ff       	call   80482f4 <_init>
 8048541:	8d 83 08 ff ff ff    	lea    eax,[ebx-0xf8]
 8048547:	29 c6                	sub    esi,eax
 8048549:	c1 fe 02             	sar    esi,0x2
 804854c:	85 f6                	test   esi,esi
 804854e:	74 25                	je     8048575 <__libc_csu_init+0x55>
 8048550:	31 ff                	xor    edi,edi
 8048552:	8d b6 00 00 00 00    	lea    esi,[esi+0x0]
 8048558:	83 ec 04             	sub    esp,0x4
 804855b:	ff 74 24 2c          	push   DWORD PTR [esp+0x2c]
 804855f:	ff 74 24 2c          	push   DWORD PTR [esp+0x2c]
 8048563:	55                   	push   ebp
 8048564:	ff 94 bb 08 ff ff ff 	call   DWORD PTR [ebx+edi*4-0xf8]
 804856b:	83 c7 01             	add    edi,0x1
 804856e:	83 c4 10             	add    esp,0x10
 8048571:	39 f7                	cmp    edi,esi
 8048573:	75 e3                	jne    8048558 <__libc_csu_init+0x38>
 8048575:	83 c4 0c             	add    esp,0xc
 8048578:	5b                   	pop    ebx
 8048579:	5e                   	pop    esi
 804857a:	5f                   	pop    edi
 804857b:	5d                   	pop    ebp
 804857c:	c3                   	ret    
 804857d:	8d 76 00             	lea    esi,[esi+0x0]

08048580 <__libc_csu_fini>:
 8048580:	f3 c3                	repz ret 

Disassembly of section .fini:

08048584 <_fini>:
 8048584:	53                   	push   ebx
 8048585:	83 ec 08             	sub    esp,0x8
 8048588:	e8 23 fe ff ff       	call   80483b0 <__x86.get_pc_thunk.bx>
 804858d:	81 c3 9f 12 00 00    	add    ebx,0x129f
 8048593:	83 c4 08             	add    esp,0x8
 8048596:	5b                   	pop    ebx
 8048597:	c3                   	ret    
